generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String        @id @default(cuid())
  email             String        @unique
  password          String
  mobile_number     String        @unique
  bio               String        @default("")
  firstname         String
  lastname          String
  isOnline          Boolean       @default(false)
  profilePictureUrl String?       @default("")
  createdAt         DateTime      @default(now())
  chats             Chat[]
  contacts          UserContact[] @relation("UserContactsOwner")
  asContacts        UserContact[] @relation("UserContactsContact")
}

model UserContact {
  id        String   @id @default(cuid())
  ownerId   String
  contactId String
  FirstName String
  LastName  String
  createdAt DateTime @default(now())
  owner     User     @relation("UserContactsOwner", fields: [ownerId], references: [id])
  contact   User     @relation("UserContactsContact", fields: [contactId], references: [id])

  @@unique([ownerId, contactId])
}

model Chat {
  id        String    @id @default(cuid())
  users     User[]
  messages  Message[]
  createdAt DateTime  @default(now())
}

model Message {
  id        String   @id @default(cuid())
  text      String
  senderId  String
  fileUrl   String?  @default("")
  chatId    String
  seen      Boolean  @default(false)
  delivered Boolean  @default(false)
  createdAt DateTime @default(now())
  chat      Chat     @relation(fields: [chatId], references: [id], onDelete: Cascade)
}

model UserVerification {
  id               String   @unique @default(cuid())
  email            String   @unique
  verificationCode String
  expiryTime       DateTime @default(now())
}
